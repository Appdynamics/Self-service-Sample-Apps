// Generated by CoffeeScript 1.9.1
(function() {
  var app;

  app = angular.module('storefront', ['ngRoute']);

  app.config([
    '$routeProvider', '$httpProvider', function($routeProvider, $httpProvider) {
      $routeProvider.when('/store', {
        templateUrl: '/partials/store.html',
        controller: 'StoreFrontController'
      }).when('/admin', {
        templateUrl: '/partials/admin.html',
        controller: 'AdminController'
      }).otherwise({
        redirectTo: '/store'
      });
      return $httpProvider.interceptors.push([
        '$q', '$rootScope', function($q, $rootScope) {
          if ($rootScope.loaders == null) {
            $rootScope.loaders = 0;
          }
          return {
            request: function(request) {
              $rootScope.loaders++;
              return request;
            },
            requestError: function(error) {
              $rootScope.loaders--;
              if ($rootScope.loaders < 0) {
                $rootScope.loaders = 0;
              }
              return error;
            },
            response: function(response) {
              $rootScope.loaders--;
              if ($rootScope.loaders < 0) {
                $rootScope.loaders = 0;
              }
              return response;
            },
            responseError: function(error) {
              $rootScope.loaders--;
              if ($rootScope.loaders < 0) {
                $rootScope.loaders = 0;
              }
              return error;
            }
          };
        }
      ]);
    }
  ]);

  app.controller('StoreFrontController', [
    '$scope', '$http', function($scope, $http) {
      $http.get('/retrieveAll').success(function(data) {
        return $scope.products = data;
      });
      return $scope.consumeProduct = function(product, $event) {
        product.loading = true;
        return $http.get('/consume', {
          method: 'GET',
          params: {
            id: product.id
          }
        }).success(function(data) {
          product.stock = data[0].stock;
          return product.loading = false;
        }).error(function() {
          alert('Unable to purchase product!');
          return product.loading = false;
        });
      };
    }
  ]);

  app.controller('AdminController', [
    '$scope', '$http', function($scope, $http) {
      $scope.addProduct = function() {};
      return $http.get('/retrieveAll').success(function(data) {
        return $scope.products = data;
      });
    }
  ]);

  app.directive('adLoader', [
    '$rootScope', function($rootScope) {
      return {
        restrict: 'E',
        templateUrl: '/partials/loader.html',
        link: function() {
          if ($rootScope.loaders == null) {
            $rootScope.loaders = 0;
          }
          $rootScope.$on('$routeChangeStart', function() {
            return $rootScope.loaders++;
          });
          return $rootScope.$on('$routeChangeSuccess', function() {
            $rootScope.loaders--;
            if ($rootScope.loaders < 0) {
              return $rootScope.loaders = 0;
            }
          });
        }
      };
    }
  ]);

  app.directive('adProduct', function() {
    return {
      restrict: 'E',
      templateUrl: '/partials/product.html',
      scope: {
        product: '=',
        consumeProduct: '='
      }
    };
  });

}).call(this);
